def load(paths, verbose=-1):

    data = np.load("/content/Face_Recognition/olivetti_faces.npy")
    target = np.load("/content/Face_Recognition/olivetti_faces_target.npy")
    labels = list()
    
    # loop over the input images
    for (i, imgpath) in enumerate(paths):

        # load the image and extract the class labels
        im_gray = cv2.imread(imgpath, cv2.IMREAD_GRAYSCALE) # Reading data as greyscale then flattening it
        image = np.array(im_gray).flatten()
        label = imgpath.split(os.path.sep)[-2]

        # scale the image to [0, 1] and add to list
        data.append(image/255)
        labels.append(label)

        # show an update every `verbose` images
        if verbose > 0 and i > 0 and (i + 1) % verbose == 0:
            print("[INFO] processed {}/{}".format(i + 1, len(paths)))

    # return a tuple of the data and labels
    return data, labels
